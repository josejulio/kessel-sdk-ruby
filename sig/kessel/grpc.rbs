module Kessel
  module GRPC
    module Client
      module Config
        class GRPCConfig < Inventory::Client::Config::Config
          attr_accessor channel_args: Hash[String, untyped]?

          def initialize: (?target: String?, ?credentials: (Inventory::Client::Config::CredentialsInsecure | Inventory::Client::Config::CredentialsSecure)?, ?keep_alive: Inventory::Client::Config::KeepAlive?, ?auth: Inventory::Client::Config::Auth?, ?channel_args: Hash[String, untyped]?) -> void
        end

        GRPCConfig: GRPCConfig
      end
    end

    class ClientBuilder
      @target: String?
      @credentials: (Inventory::Client::Config::CredentialsInsecure | Inventory::Client::Config::CredentialsSecure)?
      @auth: Inventory::Client::Config::Auth?
      @channel_args: Hash[String, untyped]

      def self.create: (Class service_class) -> Class

      def initialize: () -> void

      def with_target: (String target) -> self
      def with_insecure_credentials: () -> self
      def with_secure_credentials: (?String? root_certs, ?String? private_certs, ?String? cert_chain) -> self
      def with_credentials_config: ((Inventory::Client::Config::CredentialsInsecure | Inventory::Client::Config::CredentialsSecure) credentials_config) -> self
      def with_auth: (Inventory::Client::Config::Auth auth_config) -> self
      def with_keep_alive: (Inventory::Client::Config::KeepAlive keep_alive_config) -> self
      def with_channel_arg: (String arg, untyped value) -> self
      def with_config: (Inventory::Client::Config::Config | Client::Config::GRPCConfig config) -> self

      def build: () -> untyped

      private

      def validate: () -> self
      def nil_coalescing: (untyped first, untyped second) -> untyped
    end
  end
end
